

# AS.410.671.82.SU22 â€“ Final Project
# Date: 16AUG2022
# Author: Conner Engle

# Information and data used for this project can be found at: www.ncbi.nlm.nih.gov/sites/GDSbrowser?acc=GDS3032

# Title   :	
#	 - Quercetin effect on intestinal cell differentiation in vitro: time course
# Summary :	
#	- Analysis of post-confluent Caco-2 colon cancer cells up to 10 days after treatment with ascorbate-
#	  stabilized quercetin, a polyphenol antioxidant compound. Caco-2 cells differentiate after reaching
#	  confluency. Results provide insight into quercetin's role in cell-proliferation and -differentiation.
#
# Organism:	
#	- Homo sapiens

# Platform:	 
#	- GPL571: [HG-U133A_2] Affymetrix Human Genome U133A 2.0 Array

# Citation:	
#	- 	Dihal AA, Tilburgs C, van Erk MJ, Rietjens IM et al. Pathway and single gene analyses of inhibited Caco-2 
#     differentiation by ascorbate-stabilized quercetin suggest enhancement of cellular processes associated 
#     with development of colon cancer. 
# -   Mol Nutr Food Res 2007 
# -   Aug;51(8):1031-45. 
# -   PMID: 17639512

library(GEOquery)
library(gplots)
library(impute)
library(outliers)
library(EMA)
library(MASS)
library(multtest)

##########
# PART I - Loading/Formatting Data and Annotation
##########

# Working directory set to location with data and annotation files
setwd('/Users/Conner/Desktop')

# Loading GEO data object and formatting columns based on treatment factor
geo <- getGEO("GDS3032")
geo.dat <- Table(geo)

control.cols <- 3:6
exp.cols <- 7:10
for (i in control.cols)  { colnames(geo.dat)[i] <- paste(colnames(geo.dat[i]), "control", sep = "_") }
for (i in exp.cols)  { colnames(geo.dat)[i] <- paste(colnames(geo.dat[i]), "quercetin", sep = "_") }
dat <- data.matrix(geo.dat[, (3:ncol(geo.dat))])

# Loading annotation file into dataframe for reference
ann.dat <- read.delim('GPL571.annot', header = TRUE, row.names = 1, skip = 27, sep = "\t")
ann.dat  <- ann.dat[1:nrow(geo.dat), ]
genes <- data.frame(Description = ann.dat$Gene.title, Symbol = ann.dat$Gene.symbol)
rownames(genes) <- rownames(ann.dat)

# set dat matrix rows as probe names from annotation file
row.names(dat) <- row.names(ann.dat)

dim(dat)

# After formatting we can see that the dataset has 8 samples and 22,277 probes. Now we are ready to analyze the data


##########
# PART II - Data Visualizations and Descriptive Statistics
##########

# Standard dev and row means across samples
d.sd    <- apply(dat, 1, sd, na.rm = TRUE)
d.rmeans <- rowMeans(dat, na.rm = TRUE)

# Histogram of std dev
hist(
  	d.sd, 
  	col  = "Green",
  	xlab = "Standard Deviation expression value for GDS3032 samples",
  	ylab = "Frequency",
  	main = paste("Histogram of standard deviation expression values for",nrow(dat),"genes)
  	)

# Histogram of row means
hist(
  	d.rmeans, 
  	col  = "Red",
  	xlab = "Mean expression value for GDS3032 samples",
  	ylab = "Frequency",
  	main = paste("Histogram of mean expression values for",nrow(dat),"genes")
  	)


##########
# PART III - Outlier Detection & Missing Value Imputation
##########

# Correlation matrix of data
dat.cor <- cor(dat, method = "pearson", use = "pairwise.complete.obs")

layout(matrix(c(1,1,1,1,1,1,1,1,2,2), 5, 2, byrow = TRUE))
par(oma=c(5,7,1,1))
cx <- rev(colorpanel(25,"yellow","black","blue"))
leg <- seq(min(dat.cor,na.rm=T),max(dat.cor,na.rm=T),length=10)
image(dat.cor,main="Correlation plot GDS3032 data",axes=F,col=cx)
axis(1,at=seq(0,1,length=ncol(dat.cor)),label=dimnames(dat.cor)[[2]],cex.axis=0.9,las=2)
axis(2,at=seq(0,1,length=ncol(dat.cor)),label=dimnames(dat.cor)[[2]],cex.axis=0.9,las=2)

image(as.matrix(leg),col=cx,axes=F)
tmp <- round(leg,2)
axis(1,at=seq(0,1,length=length(leg)),labels=tmp,cex.axis=1)

# PCA Plot of Samples
dat.pca <- prcomp(t(dat))
dat.loads <- dat.pca$x[,1:2]
plot(dat.loads[,1],dat.loads[,2],main="Sample PCA plot",xlab="p1",ylab="p2",col='red',cex=1,pch=15)
text(dat.loads,label=dimnames(dat)[[2]],pos=1,cex=0.5)


# Correlation plot of gene averages for control and quercetin by timepoints (5 vs. 10 days)
cor.m <- apply(dat.cor, 1, mean)

plot(
  	c(1,length(cor.m)), 
  	range(cor.m), 
  	type = "n", 
  	xlab = "",
  	ylab = "Average correlation",
  	main = "Avg correlation for control/quercetin samples by timepoint",
  	axes = FALSE
  	)

points(
  	cor.m,
  	col = c(rep("Blue", ncol(dat)/4), rep("Green", ncol(dat)/4), rep("Orange", ncol(dat)/4), rep("Red", ncol(dat)/4)),
  	pch = c(rep(16, ncol(dat)/4), rep(17, ncol(dat)/4), rep(18, ncol(dat)/4), rep(19, ncol(dat)/4))
  	)

axis(2)
axis(1, at=c(1:length(cor.m)), labels = colnames(dat), las = 2, cex.lab = 0.3, cex.axis = 0.5)
grid(nx = 16, col = "grey")

legend(
  	"bottomright",cex=0.8, 
  	c("Control - 5 days", "Control - 10 days", "Quercetin - 5 days", "Quercetin - 10 days"), 
  	pch = c(16:19), col = c("Blue", "Green", "Orange", "Red"), bg = "white"
  	)

# CV vs. mean plot
dat.mean <- apply(log2(dat),2,mean)
dat.sd <- sqrt(apply(log2(dat),2,var))
dat.cv <- dat.sd/dat.mean

plot(dat.mean,dat.cv,main="GDS3032 GEO Dataset\nSample CV vs. Mean",xlab="Mean",ylab="CV",col='blue',cex=1.5,type="n")
points(dat.mean,dat.cv,bg="lightblue",col=1,pch=21)
text(dat.mean,dat.cv,label=dimnames(dat)[[2]],pos=1,cex=0.5)

# Although the data shows wide variation across different factors, groups of the same factors are fairly similar. GSM174949
# and GSM174950 show the largest amount of discrepancy within groups but it is difficult to tell whether an outlier exists
# without more samples across the same factors. No samples will be removed as an outlier.


# Missing value imputation
colSums(is.na(dat))

# No missing values so no imputation necessary
# dat.knn <- impute.knn(dat.kng1,6)


##########
# PART IV - Gene Filtering
##########

# First remove genes with very little expression (essentially zero)
dat.filt <- subset(dat, log2(rowMeans(dat)) > 0)
num.removed <- nrow(dat) - nrow(dat.filt)

num.removed
# Output:
# 90 
# 
# Aka 90 low variation genes removed

dat.lg <- log2(dat.filt)
lg.mean <- apply(dat.lg, 1, mean) 
lg.var <- apply(dat.lg,1,var)
lg.cv <- lg.var/lg.mean

# CV vs mean plot for filtered genes across control and quercetin samples
plot(
 	lg.mean, 
 	lg.cv, 
 	xlab = "log2(RowMeans)",
 	ylab = "log2(CV)", ylim=c(-50,50),
 	main = "Plot of Row Mean v. Row Variance for control and quercetin samples across filtered genes",
 	col  = c(rep("Blue", ncol(dat)/2), rep("Green", ncol(dat)/2)),
 	pch  = c(rep(17, ncol(dat)/2), rep(19, ncol(dat)/2))
 	)
 
 
# Filter again removing genes with mean expression less than 3 on log2 scale
dat.filt2 <- subset(dat.lg, rowMeans(dat.filt) > 3)
num.removed.2 <- nrow(dat.lg) - nrow(dat.filt2)

num.removed.2
# Output:
# 6479 
# 
# Aka 6479 genes removed

lg.mean2 <- apply(dat.filt2, 1, mean) 
lg.var2 <- apply(dat.filt2,1,var)
lg.cv2 <- lg.var2/lg.mean2

# CV vs mean plot for second set of filtered genes
plot(
  	lg.mean2, 
  	lg.cv2,
  	xlim = c(-2, 15), ylim = c(-50, 50),
  	xlab = "log2(RowMeans)",
  	ylab = "log2(CV)",
  	main = "Second Filtered Plot of Row Mean v. Row Variance for control and quercetin samples",
  	col  = c(rep("Blue", ncol(dat)/2), rep("Green", ncol(dat)/2)),
  	pch  = c(rep(17, ncol(dat)/2), rep(19, ncol(dat)/2))
  	)
legend("bottomright", c("control", "quercetin"), pch = c(17, 19), col = c("Blue", "Green"))
abline(v = 3, col = 2, lwd = 2)

genes <- subset(genes, rownames(genes) %in% rownames(dat.filt2)
dat.2 <- dat.filt2
